## $OpenXM: OpenXM_contrib2/asir2000/Makefile.vc6,v 1.4 2009/03/16 16:08:05 ohara Exp $
## Makefile for Visual C++ 6.0

!if "$(WITH_PARI)" == "no" 

PARIDEF=
PARIINC=
PARILIB=

!else

PARIDEF= -D PARI -D ULONG_NOT_DEFINED -D LONG_IS_32BIT
PARIDIR= ..\windows\pari20
PARIINC= -I $(PARIDIR)\win32
PARILIB= $(PARIDIR)\libpari.lib

!endif

GCINC= -I gc\include
GCDEF= -D ALL_INTERIOR_POINTERS -D LARGE_CONFIG -D DES_ENC

DEFS = $(PARIDEF) $(GCDEF) -D NDEBUG -D VISUAL -D WIN32 -D __WIN32__ -D CONSOLE -D SILENT -D INET -D SIZEOF_LONG=4 -D ASIR_LIBDIR=\"c:/asir/stdlib\"
INCLUDES= $(PARIINC) $(GCINC) -I include -I parse
CFLAGS=-nologo -MT -W3 -Ox $(INCLUDES) $(DEFS)

LD=link
LDFLAGS= $(PARILIB) ws2_32.lib advapi32.lib user32.lib /nologo \
  /stack:0x1000000 /subsystem:console /incremental:no

OBJS= _distm.obj A.obj al.obj alg.obj algnum.obj arith.obj array.obj \
  asir2000_dummy.obj asmiw.obj batch.obj bf.obj biovar.obj bload.obj \
  bsave.obj C.obj cio.obj comp.obj compobj.obj cpexpr.obj cplx.obj \
  cplxnum.obj cpp.obj ctrl.obj D.obj dalg.obj ddM.obj ddN.obj debug.obj \
  des.obj dft.obj dist.obj distm.obj dp-supp.obj dp.obj E.obj Ebug.obj \
  ec.obj eval.obj evall.obj EZ.obj F.obj fctr.obj fft_primes.obj Fgfs.obj \
  file.obj ftab.obj function.obj gc_risa.obj gf.obj gf2m_mul_w.obj gf2n.obj \
  gfpn.obj gfs.obj gfspn.obj glob.obj gr.obj H.obj help.obj Hgfs.obj \
  iarray.obj init.obj int.obj io.obj kwd.obj lex.obj list.obj lmi.obj \
  load.obj M.obj main.obj mat.obj math.obj mattran.obj Mgfs.obj mi.obj \
  miscf.obj mt19937.obj N.obj nd.obj NEZ.obj num.obj numerical.obj ox.obj \
  ox_asir.obj P.obj pari.obj parif.obj parser.obj PD.obj pdiv.obj PDM.obj \
  pexpr.obj pf.obj PM.obj polmul.obj poly.obj print.obj PU.obj PUM.obj \
  puref.obj pvar.obj Q.obj QM.obj quote.obj R.obj rat.obj real.obj \
  reduct.obj result.obj round.obj RU.obj sha1.obj sio.obj spexpr.obj \
  str.obj strobj.obj struct.obj subst.obj tcpf.obj time.obj type.obj Ui.obj \
  up.obj up2.obj up_gf2n.obj up_lm.obj user.obj util.obj var.obj vect.obj \
  ws_fileio.obj xdeb.obj ytab.obj Z.obj

GC_OBJS= allchblk.obj alloc.obj blacklst.obj checksums.obj dbg_mlc.obj \
  dyn_load.obj finalize.obj headers.obj mach_dep.obj malloc.obj mallocx.obj \
  mark.obj mark_rts.obj misc.obj new_hblk.obj obj_map.obj os_dep.obj \
  ptr_chck.obj real_malloc.obj reclaim.obj stubborn.obj typd_mlc.obj \
  win32_threads.obj

VPATH=asm;builtin;engine;fft;io;parse;gc

all: asir.exe

asir.exe: $(OBJS) $(GC_OBJS)
    $(LD) $(LDFLAGS) /out:$@ $**

clean:
	-@del *.obj

distclean: clean
	-@del asir.exe

asmiw.obj: {$(VPATH)}asmiw.c
	$(CC) -c $(CFLAGS) $**

ddM.obj: {$(VPATH)}ddM.c
	$(CC) -c $(CFLAGS) $**

ddN.obj: {$(VPATH)}ddN.c
	$(CC) -c $(CFLAGS) $**

gf2m_mul_w.obj: {$(VPATH)}gf2m_mul_w.c
	$(CC) -c $(CFLAGS) $**

al.obj: {$(VPATH)}al.c
	$(CC) -c $(CFLAGS) $**

algnum.obj: {$(VPATH)}algnum.c
	$(CC) -c $(CFLAGS) $**

array.obj: {$(VPATH)}array.c
	$(CC) -c $(CFLAGS) $**

batch.obj: {$(VPATH)}batch.c
	$(CC) -c $(CFLAGS) $**

compobj.obj: {$(VPATH)}compobj.c
	$(CC) -c $(CFLAGS) $**

cplxnum.obj: {$(VPATH)}cplxnum.c
	$(CC) -c $(CFLAGS) $**

ctrl.obj: {$(VPATH)}ctrl.c
	$(CC) -c $(CFLAGS) $**

dp-supp.obj: {$(VPATH)}dp-supp.c
	$(CC) -c $(CFLAGS) $**

dp.obj: {$(VPATH)}dp.c
	$(CC) -c $(CFLAGS) $**

ec.obj: {$(VPATH)}ec.c
	$(CC) -c $(CFLAGS) $**

fctr.obj: {$(VPATH)}fctr.c
	$(CC) -c $(CFLAGS) $**

file.obj: {$(VPATH)}file.c
	$(CC) -c $(CFLAGS) $**

ftab.obj: {$(VPATH)}ftab.c
	$(CC) -c $(CFLAGS) $**

gf.obj: {$(VPATH)}gf.c
	$(CC) -c $(CFLAGS) $**

gr.obj: {$(VPATH)}gr.c
	$(CC) -c $(CFLAGS) $**

help.obj: {$(VPATH)}help.c
	$(CC) -c $(CFLAGS) $**

iarray.obj: {$(VPATH)}iarray.c
	$(CC) -c $(CFLAGS) $**

int.obj: {$(VPATH)}int.c
	$(CC) -c $(CFLAGS) $**

list.obj: {$(VPATH)}list.c
	$(CC) -c $(CFLAGS) $**

math.obj: {$(VPATH)}math.c
	$(CC) -c $(CFLAGS) $**

mattran.obj: {$(VPATH)}mattran.c
	$(CC) -c $(CFLAGS) $**

miscf.obj: {$(VPATH)}miscf.c
	$(CC) -c $(CFLAGS) $**

numerical.obj: {$(VPATH)}numerical.c
	$(CC) -c $(CFLAGS) $**

parif.obj: {$(VPATH)}parif.c
	$(CC) -c $(CFLAGS) $**

pdiv.obj: {$(VPATH)}pdiv.c
	$(CC) -c $(CFLAGS) $**

pf.obj: {$(VPATH)}pf.c
	$(CC) -c $(CFLAGS) $**

poly.obj: {$(VPATH)}poly.c
	$(CC) -c $(CFLAGS) $**

print.obj: {$(VPATH)}print.c
	$(CC) -c $(CFLAGS) $**

rat.obj: {$(VPATH)}rat.c
	$(CC) -c $(CFLAGS) $**

reduct.obj: {$(VPATH)}reduct.c
	$(CC) -c $(CFLAGS) $**

result.obj: {$(VPATH)}result.c
	$(CC) -c $(CFLAGS) $**

round.obj: {$(VPATH)}round.c
	$(CC) -c $(CFLAGS) $**

sha1.obj: {$(VPATH)}sha1.c
	$(CC) -c $(CFLAGS) $**

strobj.obj: {$(VPATH)}strobj.c
	$(CC) -c $(CFLAGS) $**

subst.obj: {$(VPATH)}subst.c
	$(CC) -c $(CFLAGS) $**

time.obj: {$(VPATH)}time.c
	$(CC) -c $(CFLAGS) $**

type.obj: {$(VPATH)}type.c
	$(CC) -c $(CFLAGS) $**

user.obj: {$(VPATH)}user.c
	$(CC) -c $(CFLAGS) $**

var.obj: {$(VPATH)}var.c
	$(CC) -c $(CFLAGS) $**

A.obj: {$(VPATH)}A.c
	$(CC) -c $(CFLAGS) $**

C.obj: {$(VPATH)}C.c
	$(CC) -c $(CFLAGS) $**

D.obj: {$(VPATH)}D.c
	$(CC) -c $(CFLAGS) $**

E.obj: {$(VPATH)}E.c
	$(CC) -c $(CFLAGS) $**

EZ.obj: {$(VPATH)}EZ.c
	$(CC) -c $(CFLAGS) $**

Ebug.obj: {$(VPATH)}Ebug.c
	$(CC) -c $(CFLAGS) $**

F.obj: {$(VPATH)}F.c
	$(CC) -c $(CFLAGS) $**

Fgfs.obj: {$(VPATH)}Fgfs.c
	$(CC) -c $(CFLAGS) $**

H.obj: {$(VPATH)}H.c
	$(CC) -c $(CFLAGS) $**

Hgfs.obj: {$(VPATH)}Hgfs.c
	$(CC) -c $(CFLAGS) $**

M.obj: {$(VPATH)}M.c
	$(CC) -c $(CFLAGS) $**

Mgfs.obj: {$(VPATH)}Mgfs.c
	$(CC) -c $(CFLAGS) $**

N.obj: {$(VPATH)}N.c
	$(CC) -c $(CFLAGS) $**

NEZ.obj: {$(VPATH)}NEZ.c
	$(CC) -c $(CFLAGS) $**

P.obj: {$(VPATH)}P.c
	$(CC) -c $(CFLAGS) $**

PD.obj: {$(VPATH)}PD.c
	$(CC) -c $(CFLAGS) $**

PDM.obj: {$(VPATH)}PDM.c
	$(CC) -c $(CFLAGS) $**

PM.obj: {$(VPATH)}PM.c
	$(CC) -c $(CFLAGS) $**

PU.obj: {$(VPATH)}PU.c
	$(CC) -c $(CFLAGS) $**

PUM.obj: {$(VPATH)}PUM.c
	$(CC) -c $(CFLAGS) $**

Q.obj: {$(VPATH)}Q.c
	$(CC) -c $(CFLAGS) $**

QM.obj: {$(VPATH)}QM.c
	$(CC) -c $(CFLAGS) $**

R.obj: {$(VPATH)}R.c
	$(CC) -c $(CFLAGS) $**

RU.obj: {$(VPATH)}RU.c
	$(CC) -c $(CFLAGS) $**

Ui.obj: {$(VPATH)}Ui.c
	$(CC) -c $(CFLAGS) $**

Z.obj: {$(VPATH)}Z.c
	$(CC) -c $(CFLAGS) $**

_distm.obj: {$(VPATH)}_distm.c
	$(CC) -c $(CFLAGS) $**

alg.obj: {$(VPATH)}alg.c
	$(CC) -c $(CFLAGS) $**

bf.obj: {$(VPATH)}bf.c
	$(CC) -c $(CFLAGS) $**

cplx.obj: {$(VPATH)}cplx.c
	$(CC) -c $(CFLAGS) $**

dalg.obj: {$(VPATH)}dalg.c
	$(CC) -c $(CFLAGS) $**

dist.obj: {$(VPATH)}dist.c
	$(CC) -c $(CFLAGS) $**

distm.obj: {$(VPATH)}distm.c
	$(CC) -c $(CFLAGS) $**

gf2n.obj: {$(VPATH)}gf2n.c
	$(CC) -c $(CFLAGS) $**

gfpn.obj: {$(VPATH)}gfpn.c
	$(CC) -c $(CFLAGS) $**

gfs.obj: {$(VPATH)}gfs.c
	$(CC) -c $(CFLAGS) $**

gfspn.obj: {$(VPATH)}gfspn.c
	$(CC) -c $(CFLAGS) $**

init.obj: {$(VPATH)}init.c
	$(CC) -c $(CFLAGS) $**

lmi.obj: {$(VPATH)}lmi.c
	$(CC) -c $(CFLAGS) $**

mat.obj: {$(VPATH)}mat.c
	$(CC) -c $(CFLAGS) $**

mi.obj: {$(VPATH)}mi.c
	$(CC) -c $(CFLAGS) $**

mt19937.obj: {$(VPATH)}mt19937.c
	$(CC) -c $(CFLAGS) $**

nd.obj: {$(VPATH)}nd.c
	$(CC) -c $(CFLAGS) $**

num.obj: {$(VPATH)}num.c
	$(CC) -c $(CFLAGS) $**

pari.obj: {$(VPATH)}pari.c
	$(CC) -c $(CFLAGS) $**

real.obj: {$(VPATH)}real.c
	$(CC) -c $(CFLAGS) $**

str.obj: {$(VPATH)}str.c
	$(CC) -c $(CFLAGS) $**

up.obj: {$(VPATH)}up.c
	$(CC) -c $(CFLAGS) $**

up2.obj: {$(VPATH)}up2.c
	$(CC) -c $(CFLAGS) $**

up_gf2n.obj: {$(VPATH)}up_gf2n.c
	$(CC) -c $(CFLAGS) $**

up_lm.obj: {$(VPATH)}up_lm.c
	$(CC) -c $(CFLAGS) $**

vect.obj: {$(VPATH)}vect.c
	$(CC) -c $(CFLAGS) $**

dft.obj: {$(VPATH)}dft.c
	$(CC) -c $(CFLAGS) $**

fft_primes.obj: {$(VPATH)}fft_primes.c
	$(CC) -c $(CFLAGS) $**

polmul.obj: {$(VPATH)}polmul.c
	$(CC) -c $(CFLAGS) $**

biovar.obj: {$(VPATH)}biovar.c
	$(CC) -c $(CFLAGS) $**

bload.obj: {$(VPATH)}bload.c
	$(CC) -c $(CFLAGS) $**

bsave.obj: {$(VPATH)}bsave.c
	$(CC) -c $(CFLAGS) $**

cio.obj: {$(VPATH)}cio.c
	$(CC) -c $(CFLAGS) $**

cpexpr.obj: {$(VPATH)}cpexpr.c
	$(CC) -c $(CFLAGS) $**

des.obj: {$(VPATH)}des.c
	$(CC) -c $(CFLAGS) $**

io.obj: {$(VPATH)}io.c
	$(CC) -c $(CFLAGS) $**

ox.obj: {$(VPATH)}ox.c
	$(CC) -c $(CFLAGS) $**

ox_asir.obj: {$(VPATH)}ox_asir.c
	$(CC) -c $(CFLAGS) $**

pexpr.obj: {$(VPATH)}pexpr.c
	$(CC) -c $(CFLAGS) $**

sio.obj: {$(VPATH)}sio.c
	$(CC) -c $(CFLAGS) $**

spexpr.obj: {$(VPATH)}spexpr.c
	$(CC) -c $(CFLAGS) $**

tcpf.obj: {$(VPATH)}tcpf.c
	$(CC) -c $(CFLAGS) $**

ws_fileio.obj: {$(VPATH)}ws_fileio.c
	$(CC) -c $(CFLAGS) $**

arith.obj: {$(VPATH)}arith.c
	$(CC) -c $(CFLAGS) $**

asir2000_dummy.obj: {$(VPATH)}asir2000_dummy.c
	$(CC) -c $(CFLAGS) $**

comp.obj: {$(VPATH)}comp.c
	$(CC) -c $(CFLAGS) $**

cpp.obj: {$(VPATH)}cpp.c
	$(CC) -c $(CFLAGS) $**

debug.obj: {$(VPATH)}debug.c
	$(CC) -c $(CFLAGS) $**

eval.obj: {$(VPATH)}eval.c
	$(CC) -c $(CFLAGS) $**

evall.obj: {$(VPATH)}evall.c
	$(CC) -c $(CFLAGS) $**

function.obj: {$(VPATH)}function.c
	$(CC) -c $(CFLAGS) $**

gc_risa.obj: {$(VPATH)}gc_risa.c
	$(CC) -c $(CFLAGS) $**

glob.obj: {$(VPATH)}glob.c
	$(CC) -c $(CFLAGS) $**

kwd.obj: {$(VPATH)}kwd.c
	$(CC) -c $(CFLAGS) $**

lex.obj: {$(VPATH)}lex.c
	$(CC) -c $(CFLAGS) $**

load.obj: {$(VPATH)}load.c
	$(CC) -c $(CFLAGS) $**

main.obj: {$(VPATH)}main.c
	$(CC) -c $(CFLAGS) $**

parser.obj: {$(VPATH)}parser.c
	$(CC) -c $(CFLAGS) $**

puref.obj: {$(VPATH)}puref.c
	$(CC) -c $(CFLAGS) $**

pvar.obj: {$(VPATH)}pvar.c
	$(CC) -c $(CFLAGS) $**

quote.obj: {$(VPATH)}quote.c
	$(CC) -c $(CFLAGS) $**

struct.obj: {$(VPATH)}struct.c
	$(CC) -c $(CFLAGS) $**

util.obj: {$(VPATH)}util.c
	$(CC) -c $(CFLAGS) $**

xdeb.obj: {$(VPATH)}xdeb.c
	$(CC) -c $(CFLAGS) $**

ytab.obj: {$(VPATH)}ytab.c
	$(CC) -c $(CFLAGS) $**

## gc
allchblk.obj: {$(VPATH)}allchblk.c
	$(CC) -c $(CFLAGS) $**

alloc.obj: {$(VPATH)}alloc.c
	$(CC) -c $(CFLAGS) $**

blacklst.obj: {$(VPATH)}blacklst.c
	$(CC) -c $(CFLAGS) $**

checksums.obj: {$(VPATH)}checksums.c
	$(CC) -c $(CFLAGS) $**

dbg_mlc.obj: {$(VPATH)}dbg_mlc.c
	$(CC) -c $(CFLAGS) $**

dyn_load.obj: {$(VPATH)}dyn_load.c
	$(CC) -c $(CFLAGS) $**

finalize.obj: {$(VPATH)}finalize.c
	$(CC) -c $(CFLAGS) $**

headers.obj: {$(VPATH)}headers.c
	$(CC) -c $(CFLAGS) $**

mach_dep.obj: {$(VPATH)}mach_dep.c
	$(CC) -c $(CFLAGS) $**

malloc.obj: {$(VPATH)}malloc.c
	$(CC) -c $(CFLAGS) $**

mallocx.obj: {$(VPATH)}mallocx.c
	$(CC) -c $(CFLAGS) $**

mark.obj: {$(VPATH)}mark.c
	$(CC) -c $(CFLAGS) $**

mark_rts.obj: {$(VPATH)}mark_rts.c
	$(CC) -c $(CFLAGS) $**

misc.obj: {$(VPATH)}misc.c
	$(CC) -c $(CFLAGS) $**

new_hblk.obj: {$(VPATH)}new_hblk.c
	$(CC) -c $(CFLAGS) $**

obj_map.obj: {$(VPATH)}obj_map.c
	$(CC) -c $(CFLAGS) $**

os_dep.obj: {$(VPATH)}os_dep.c
	$(CC) -c $(CFLAGS) $**

ptr_chck.obj: {$(VPATH)}ptr_chck.c
	$(CC) -c $(CFLAGS) $**

real_malloc.obj: {$(VPATH)}real_malloc.c
	$(CC) -c $(CFLAGS) $**

reclaim.obj: {$(VPATH)}reclaim.c
	$(CC) -c $(CFLAGS) $**

stubborn.obj: {$(VPATH)}stubborn.c
	$(CC) -c $(CFLAGS) $**

typd_mlc.obj: {$(VPATH)}typd_mlc.c
	$(CC) -c $(CFLAGS) $**

win32_threads.obj: {$(VPATH)}win32_threads.c
	$(CC) -c $(CFLAGS) $**
