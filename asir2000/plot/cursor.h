/*
 * Copyright (c) 1994-2000 FUJITSU LABORATORIES LIMITED 
 * All rights reserved.
 * 
 * FUJITSU LABORATORIES LIMITED ("FLL") hereby grants you a limited,
 * non-exclusive and royalty-free license to use, copy, modify and
 * redistribute, solely for non-commercial and non-profit purposes, the
 * computer program, "Risa/Asir" ("SOFTWARE"), subject to the terms and
 * conditions of this Agreement. For the avoidance of doubt, you acquire
 * only a limited right to use the SOFTWARE hereunder, and FLL or any
 * third party developer retains all rights, including but not limited to
 * copyrights, in and to the SOFTWARE.
 * 
 * (1) FLL does not grant you a license in any way for commercial
 * purposes. You may use the SOFTWARE only for non-commercial and
 * non-profit purposes only, such as academic, research and internal
 * business use.
 * (2) The SOFTWARE is protected by the Copyright Law of Japan and
 * international copyright treaties. If you make copies of the SOFTWARE,
 * with or without modification, as permitted hereunder, you shall affix
 * to all such copies of the SOFTWARE the above copyright notice.
 * (3) An explicit reference to this SOFTWARE and its copyright owner
 * shall be made on your publication or presentation in any form of the
 * results obtained by use of the SOFTWARE.
 * (4) In the event that you modify the SOFTWARE, you shall notify FLL by
 * e-mail at risa-admin@sec.flab.fujitsu.co.jp of the detailed specification
 * for such modification or the source code of the modified part of the
 * SOFTWARE.
 * 
 * THE SOFTWARE IS PROVIDED AS IS WITHOUT ANY WARRANTY OF ANY KIND. FLL
 * MAKES ABSOLUTELY NO WARRANTIES, EXPRESSED, IMPLIED OR STATUTORY, AND
 * EXPRESSLY DISCLAIMS ANY IMPLIED WARRANTY OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT OF THIRD PARTIES'
 * RIGHTS. NO FLL DEALER, AGENT, EMPLOYEES IS AUTHORIZED TO MAKE ANY
 * MODIFICATIONS, EXTENSIONS, OR ADDITIONS TO THIS WARRANTY.
 * UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL THEORY, TORT, CONTRACT,
 * OR OTHERWISE, SHALL FLL BE LIABLE TO YOU OR ANY OTHER PERSON FOR ANY
 * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, PUNITIVE OR CONSEQUENTIAL
 * DAMAGES OF ANY CHARACTER, INCLUDING, WITHOUT LIMITATION, DAMAGES
 * ARISING OUT OF OR RELATING TO THE SOFTWARE OR THIS AGREEMENT, DAMAGES
 * FOR LOSS OF GOODWILL, WORK STOPPAGE, OR LOSS OF DATA, OR FOR ANY
 * DAMAGES, EVEN IF FLL SHALL HAVE BEEN INFORMED OF THE POSSIBILITY OF
 * SUCH DAMAGES, OR FOR ANY CLAIM BY ANY OTHER PARTY. EVEN IF A PART
 * OF THE SOFTWARE HAS BEEN DEVELOPED BY A THIRD PARTY, THE THIRD PARTY
 * DEVELOPER SHALL HAVE NO LIABILITY IN CONNECTION WITH THE USE,
 * PERFORMANCE OR NON-PERFORMANCE OF THE SOFTWARE.
 *
 * $OpenXM: OpenXM_contrib2/asir2000/plot/cursor.h,v 1.2 2000/08/21 08:31:50 noro Exp $ 
*/
#if defined(__GNUC__) || defined(THINK_C)
#define CONST const
#else
#define CONST
#endif

#define h_width 32
#define h_height 32
#define h_x_hot 0
#define h_y_hot 0
static CONST char h_bits[] = {
   0x55, 0x05, 0x00, 0x00, 0xaa, 0x02, 0xe0, 0x03, 0x55, 0x01, 0x18, 0x0c,
   0xaa, 0x00, 0x04, 0x10, 0x55, 0x01, 0x02, 0x20, 0xaa, 0x02, 0x02, 0x20,
   0x55, 0x05, 0x01, 0x40, 0xaa, 0x0a, 0x01, 0x40, 0x55, 0x15, 0xc7, 0x41,
   0xa2, 0xaa, 0x28, 0x40, 0x41, 0x55, 0x00, 0x40, 0x80, 0x2a, 0x45, 0x45,
   0x00, 0x35, 0x00, 0x50, 0x00, 0xaa, 0x92, 0x52, 0x00, 0x34, 0x10, 0x50,
   0x00, 0x68, 0x28, 0x48, 0x00, 0xb0, 0xd7, 0x67, 0x00, 0x88, 0x6a, 0xc1,
   0x00, 0x8c, 0x56, 0x81, 0x00, 0x0a, 0xa9, 0x80, 0x60, 0x09, 0x50, 0x80,
   0x98, 0x09, 0xa8, 0x80, 0x24, 0x09, 0xd8, 0x80, 0xc6, 0x10, 0xac, 0xc1,
   0xcd, 0x20, 0x52, 0x33, 0x91, 0xc0, 0xa1, 0x2e, 0x91, 0x00, 0x40, 0x55,
   0x01, 0x00, 0x80, 0xaa, 0x02, 0x00, 0x14, 0x55, 0x0c, 0x00, 0x08, 0x2a,
   0xf0, 0x00, 0x94, 0x15, 0x00, 0xff, 0x7f, 0x08};

#define h_m_width 32
#define h_m_height 32
#define h_m_x_hot 0
#define h_m_y_hot 0
static CONST char h_m_bits[] = {
   0xff, 0x07, 0x00, 0x00, 0xff, 0x03, 0xe0, 0x03, 0xab, 0x01, 0xf8, 0x0f,
   0xd7, 0x00, 0xfc, 0x1f, 0xab, 0x01, 0xfe, 0x3f, 0x57, 0x03, 0xfe, 0x3f,
   0xab, 0x06, 0xff, 0x7f, 0x5f, 0x0d, 0xff, 0x7f, 0xb7, 0x1a, 0xff, 0x7f,
   0x63, 0xf5, 0xff, 0x7f, 0xc1, 0xea, 0xff, 0x7f, 0x80, 0xf5, 0xff, 0x7f,
   0x00, 0xeb, 0xff, 0x7f, 0x00, 0xf6, 0xff, 0x7f, 0x00, 0xec, 0xff, 0x7f,
   0x00, 0xf8, 0xff, 0x7f, 0x00, 0xf0, 0xff, 0x7f, 0x00, 0xf8, 0xff, 0xff,
   0x00, 0xfc, 0xff, 0xff, 0x00, 0xfe, 0xff, 0xff, 0x60, 0xff, 0xff, 0xff,
   0xf8, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x37, 0xff, 0xff, 0xff, 0x6f,
   0xff, 0xff, 0xff, 0xd7, 0xfe, 0xff, 0xff, 0x6b, 0xfc, 0xff, 0xff, 0x37,
   0xf0, 0xff, 0xff, 0x1d, 0x00, 0xff, 0x7f, 0x08};

#define ht_width 32
#define ht_height 32
#define ht_x_hot 12
#define ht_y_hot 29
static CONST char ht_bits[] = {
   0x04, 0x7c, 0x00, 0x00, 0x08, 0x83, 0x01, 0x00, 0x80, 0x00, 0x62, 0x00,
   0x40, 0x40, 0x04, 0x00, 0x46, 0x40, 0x04, 0x00, 0x20, 0x00, 0x08, 0x00,
   0x20, 0x02, 0x89, 0x00, 0xe0, 0x3d, 0x09, 0x01, 0x12, 0x05, 0x08, 0x00,
   0x09, 0x00, 0x08, 0x00, 0xa4, 0xa8, 0x08, 0x00, 0x04, 0x00, 0x4a, 0x00,
   0x54, 0x52, 0x4a, 0x00, 0x04, 0x02, 0x0a, 0x00, 0x08, 0x05, 0x09, 0x00,
   0xf8, 0xf8, 0x0c, 0x00, 0x54, 0x2c, 0x18, 0x00, 0x52, 0x2b, 0x30, 0x00,
   0xa1, 0x10, 0x60, 0x00, 0x01, 0x01, 0xa1, 0x06, 0x01, 0x02, 0xa1, 0x19,
   0x01, 0x0c, 0x90, 0x24, 0x02, 0x37, 0x08, 0x63, 0xc4, 0x40, 0x06, 0xb3,
   0x3c, 0x80, 0x01, 0x89, 0x04, 0x00, 0x00, 0x89, 0x04, 0x00, 0x00, 0x80,
   0x08, 0x00, 0x00, 0x40, 0x08, 0x28, 0x00, 0x3e, 0x10, 0x10, 0x80, 0x01,
   0x60, 0x28, 0x60, 0x00, 0x80, 0xff, 0x1f, 0x00};

#define ht_m_width 32
#define ht_m_height 32
#define ht_m_x_hot 12
#define ht_m_y_hot 29
static CONST char ht_m_bits[] = {
   0x04, 0x7c, 0x00, 0x00, 0x08, 0xff, 0x01, 0x00, 0x80, 0xff, 0x63, 0x00,
   0xc0, 0xff, 0x07, 0x00, 0xc6, 0xff, 0x07, 0x00, 0xe0, 0xff, 0x0f, 0x00,
   0xe0, 0xff, 0x8f, 0x00, 0xe0, 0xff, 0x0f, 0x01, 0xf2, 0xff, 0x0f, 0x00,
   0xf9, 0xff, 0x0f, 0x00, 0xfc, 0xff, 0x0f, 0x00, 0xfc, 0xff, 0x4f, 0x00,
   0xfc, 0xff, 0x4f, 0x00, 0xfc, 0xff, 0x0f, 0x00, 0xf8, 0xff, 0x0f, 0x00,
   0xf8, 0xff, 0x0f, 0x00, 0xfc, 0xff, 0x1f, 0x00, 0xfe, 0xff, 0x3f, 0x00,
   0xff, 0xff, 0x7f, 0x00, 0xff, 0xff, 0xff, 0x06, 0xff, 0xff, 0xff, 0x1f,
   0xff, 0xff, 0xff, 0x3f, 0xfe, 0xff, 0xff, 0x7f, 0xfc, 0xff, 0xff, 0xff,
   0xfc, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff,
   0xf8, 0xff, 0xff, 0x7f, 0xf8, 0xff, 0xff, 0x3f, 0xf0, 0xff, 0xff, 0x01,
   0xe0, 0xff, 0x7f, 0x00, 0x80, 0xff, 0x1f, 0x00};

#define m_width 64
#define m_height 64
static CONST char m_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x7f,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x80, 0x03, 0x00, 0x00, 0x00,
   0x00, 0x00, 0xc2, 0x3f, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x40,
   0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x20, 0x03, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x80, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x30,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x40, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x08, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
   0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00,
   0x00, 0x00, 0xa4, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x0f,
   0x02, 0x00, 0x00, 0x00, 0x00, 0x60, 0x04, 0x60, 0x02, 0x00, 0x00, 0x00,
   0x00, 0x98, 0x02, 0x80, 0x02, 0x1c, 0x00, 0x00, 0xe0, 0x07, 0x15, 0x95,
   0x02, 0x63, 0x00, 0x00, 0x40, 0x40, 0x01, 0x80, 0x84, 0x80, 0x00, 0x00,
   0x80, 0x18, 0x55, 0x8a, 0x44, 0x1c, 0x01, 0x00, 0x00, 0x07, 0x42, 0x40,
   0x24, 0x22, 0x02, 0x00, 0x00, 0x24, 0xa4, 0x20, 0x94, 0x00, 0x0c, 0x00,
   0x00, 0x14, 0x3b, 0x1f, 0x09, 0x20, 0x70, 0x00, 0x00, 0x88, 0x28, 0x0a,
   0x0a, 0xc4, 0x81, 0x01, 0x00, 0x50, 0x28, 0x0a, 0x12, 0x08, 0x46, 0x00,
   0x00, 0x60, 0xd0, 0x05, 0x12, 0x31, 0x38, 0x00, 0x00, 0x40, 0x40, 0x01,
   0x52, 0xc2, 0x04, 0x00, 0x00, 0x40, 0xc0, 0x01, 0xd2, 0x35, 0x03, 0x00,
   0x00, 0x80, 0x40, 0x01, 0x22, 0x08, 0x00, 0x00, 0x00, 0x80, 0x40, 0x02,
   0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33, 0x8c, 0x20, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x1c, 0x70, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00,
   0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x40, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x20, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00,
   0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x14,
   0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x08, 0x80, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x15, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
   0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x80, 0x07, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x08, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
   0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x20, 0x20, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x80, 0x41, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0x01, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x08, 0x52, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x90, 0x94, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x25, 0x01, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x20, 0xaa, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x20, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x52, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x80, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

#define m_m_width 64
#define m_m_height 64
static CONST char m_m_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x01, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x7f,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x03, 0x00, 0x00, 0x00,
   0x00, 0x40, 0x7e, 0xe0, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0xc0,
   0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0xc0, 0x03, 0x00, 0x00, 0x00,
   0x00, 0x00, 0xc1, 0x9f, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x3f,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x7f, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0xf8, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff,
   0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x01, 0x00, 0x00, 0x00,
   0x00, 0x00, 0xfc, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff,
   0x03, 0x00, 0x00, 0x00, 0x00, 0x60, 0xfc, 0xff, 0x03, 0x00, 0x00, 0x00,
   0x00, 0xf8, 0xfe, 0xff, 0x03, 0x1c, 0x00, 0x00, 0xe0, 0xff, 0xff, 0xff,
   0x03, 0x7f, 0x00, 0x00, 0xc0, 0xff, 0xff, 0xff, 0x87, 0xff, 0x00, 0x00,
   0x80, 0xff, 0xff, 0xff, 0xc7, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0xff,
   0xe7, 0xff, 0x03, 0x00, 0x00, 0xfc, 0xff, 0xff, 0xf7, 0xff, 0x0f, 0x00,
   0x40, 0xfc, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x00, 0xf8, 0xff, 0xff,
   0xff, 0xff, 0xff, 0x01, 0x00, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x00,
   0x00, 0xe0, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x00, 0x00, 0xc0, 0xff, 0xff,
   0xff, 0xff, 0x07, 0x00, 0x00, 0xc0, 0xff, 0xff, 0xff, 0x3d, 0x83, 0x00,
   0x10, 0x80, 0xff, 0xff, 0x3f, 0x08, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff,
   0x3f, 0x80, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x3f, 0x00, 0x00, 0x10,
   0x00, 0x08, 0xfc, 0xff, 0x3f, 0x02, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff,
   0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x7f, 0x00, 0x01, 0x00,
   0x10, 0x00, 0xe0, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xff,
   0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x7f, 0x00, 0x00, 0x00,
   0x00, 0x00, 0xc0, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff,
   0xff, 0x10, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe,
   0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x07, 0x00, 0x00,
   0x00, 0x00, 0x00, 0xf8, 0xff, 0x0f, 0x04, 0x00, 0x00, 0x00, 0x00, 0xf0,
   0xff, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x3f, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x80, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x01, 0x00,
   0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
   0xf0, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 0x80, 0xf0, 0xff, 0x01, 0x00,
   0x00, 0x00, 0x00, 0x00, 0xe0, 0xfb, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00,
   0xe0, 0x77, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x73, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x80, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00};
